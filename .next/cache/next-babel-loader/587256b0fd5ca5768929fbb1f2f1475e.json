{"ast":null,"code":"var _jsxFileName = \"D:\\\\iiit-k\\\\Samples\\\\next\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"../components/headerComponent\";\nimport Footer from '../components/footerComponent';\nimport { Box, Breadcrumbs, Link, Typography, Card, CardHeader, CardContent, CardMedia, Grid } from '@material-ui/core';\nimport { useState } from 'react';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nfunction HomePage() {\n  const {\n    0: Loading,\n    1: setLoading\n  } = useState(1);\n  const arr = [1, 2, 3, 4, 5, 6];\n  setInterval(() => setLoading(0), 3000);\n  return __jsx(\"div\", {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }), __jsx(Breadcrumbs, {\n    \"aria-label\": \"breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    color: \"inherit\",\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"Home\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, Loading ? __jsx(Skeleton, {\n    variant: \"txt\",\n    height: 50,\n    width: 250,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 24\n    }\n  }) : __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"MS Dhoni\")), __jsx(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, Loading ? __jsx(Skeleton, {\n    variant: \"rec\",\n    width: 250,\n    height: 250,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 24\n    }\n  }) : __jsx(\"img\", {\n    src: \"/images/dhoni.jpg\",\n    style: {\n      marginBottom: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    justify: \"center\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, arr.map(ele => {\n    return __jsx(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }, Loading ? __jsx(Skeleton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 28\n      }\n    }) : __jsx(Typography, {\n      variant: \"subtitle1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 41\n      }\n    }, \"(2013-2020)\"), Loading ? __jsx(Skeleton, {\n      variant: \"text\",\n      height: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }\n    }) : __jsx(Typography, {\n      varient: \"body1\",\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }\n    }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 Mahendra Singh Dhoni (About this soundpronunciation (help\\xB7info) born 7 July 1981), is a former Indian international cricketer who captained the Indian national team in limited-overs formats from 2007 to 2016 and in Test cricket from 2008 to 2014. Under his captaincy, India won the 2007 ICC World Twenty20, the 2010 and 2016 Asia Cups, the 2011 ICC Cricket World Cup and the 2013 ICC Champions Trophy\"));\n  })))), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport async function getServerSideProps() {\n  // Fetch data from external API\n  console.log(\"Hii\");\n  const res = fetch(\"https://github.com/typicode/demo/blob/master/db.json\").then(response => {\n    if (response.ok) {\n      console.log(response);\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => console.log(response.json())).catch(error => console.log(error.message));\n  console.log(res);\n  const data = await res.json(); // Pass data to the page via props\n\n  return {\n    props: {\n      data\n    }\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["D:/iiit-k/Samples/next/pages/index.js"],"names":["Header","Footer","Box","Breadcrumbs","Link","Typography","Card","CardHeader","CardContent","CardMedia","Grid","useState","Skeleton","HomePage","Loading","setLoading","arr","setInterval","marginBottom","map","ele","getServerSideProps","console","log","res","fetch","then","response","ok","error","Error","status","statusText","errmess","message","json","catch","data","props"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,+BAAnB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,SAAQC,GAAR,EAAYC,WAAZ,EAAwBC,IAAxB,EAA8BC,UAA9B,EAAyCC,IAAzC,EAA+CC,UAA/C,EACGC,WADH,EACgBC,SADhB,EAC2BC,IAD3B,QACsC,mBADtC;AAEA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AACA,SAASC,QAAT,GAAoB;AAChB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBJ,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAMK,GAAG,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAAZ;AACAC,EAAAA,WAAW,CAAC,MAAIF,UAAU,CAAC,CAAD,CAAf,EAAmB,IAAnB,CAAX;AACA,SACA;AAAK,IAAA,KAAK,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,WAAD;AAAa,kBAAW,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,SAAZ;AAAsB,IAAA,IAAI,EAAC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAFF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAiC,IAAA,OAAO,EAAE,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,IAAI,MAApB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,OAAO,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,GAAG,MAAC,QAAD;AAAU,IAAA,OAAO,EAAC,KAAlB;AAAwB,IAAA,MAAM,EAAE,EAAhC;AAAoC,IAAA,KAAK,EAAE,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF,EAME,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,IAAI,MAApB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,OAAO,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,GAAG,MAAC,QAAD;AAAU,IAAA,OAAO,EAAC,KAAlB;AAAwB,IAAA,KAAK,EAAE,GAA/B;AAAoC,IAAA,MAAM,EAAE,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACR;AAAK,IAAA,GAAG,EAAC,mBAAT;AAA8B,IAAA,KAAK,EAAE;AAACI,MAAAA,YAAY,EAAC;AAAd,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANF,EAWE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,IAAI,MAApB;AAAsB,IAAA,EAAE,EAAE,EAA1B;AAA8B,IAAA,OAAO,EAAC,QAAtC;AAA+C,IAAA,OAAO,EAAE,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,GAAG,CAACG,GAAJ,CAASC,GAAD,IAAS;AACd,WAAQ,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACLN,OAAO,GAAC,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,GAAc,MAAC,UAAD;AAAY,MAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADhB,EAEJA,OAAO,GAAC,MAAC,QAAD;AAAU,MAAA,OAAO,EAAC,MAAlB;AAAyB,MAAA,MAAM,EAAE,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,GACT,MAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA2B,MAAA,KAAK,EAAC,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0cAHM,CAAR;AAaD,GAdF,CADH,CAXF,CADF,CAPF,EAuCE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCF,CADA;AA2CD;;AACD,OAAO,eAAeO,kBAAf,GAAoC;AACzC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,QAAMC,GAAG,GAAGC,KAAK,CAAC,sDAAD,CAAL,CAA8DC,IAA9D,CAAmEC,QAAQ,IAAI;AACzF,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACfN,MAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACA,aAAOA,QAAP;AACD,KAHD,MAGO;AACL,UAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,WAAWH,QAAQ,CAACI,MAApB,GAA6B,IAA7B,GAAoCJ,QAAQ,CAACK,UAAvD,CAAZ;AACAH,MAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,YAAME,KAAN;AACD;AACF,GATW,EAUZA,KAAK,IAAI;AACH,QAAII,OAAO,GAAG,IAAIH,KAAJ,CAAUD,KAAK,CAACK,OAAhB,CAAd;AACA,UAAMD,OAAN;AACL,GAbW,EAcbP,IAda,CAcRC,QAAQ,IAAIL,OAAO,CAACC,GAAR,CAAYI,QAAQ,CAACQ,IAAT,EAAZ,CAdJ,EAebC,KAfa,CAePP,KAAK,IAAIP,OAAO,CAACC,GAAR,CAAYM,KAAK,CAACK,OAAlB,CAfF,CAAZ;AAmBAZ,EAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACA,QAAMa,IAAI,GAAG,MAAMb,GAAG,CAACW,IAAJ,EAAnB,CAvByC,CAyBzC;;AACA,SAAO;AAAEG,IAAAA,KAAK,EAAE;AAAED,MAAAA;AAAF;AAAT,GAAP;AACD;AACD,eAAexB,QAAf","sourcesContent":["import Header from \"../components/headerComponent\";\r\nimport Footer from '../components/footerComponent';\r\nimport {Box,Breadcrumbs,Link, Typography,Card, CardHeader,\r\n   CardContent, CardMedia, Grid} from '@material-ui/core';\r\nimport {useState} from 'react';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nfunction HomePage() {\r\n    const [Loading, setLoading] = useState(1);\r\n    const arr = [1,2,3,4,5,6];\r\n    setInterval(()=>setLoading(0),3000);\r\n    return (\r\n    <div style={{}}>\r\n      <Header/>\r\n      <Breadcrumbs aria-label=\"breadcrumb\">\r\n        <Link color=\"inherit\" href=\"/\">\r\n          Home\r\n        </Link>\r\n      </Breadcrumbs>\r\n      <div>\r\n        <Grid container justify=\"center\" spacing={3}>\r\n          <Grid container item xs={12} justify=\"center\">\r\n            {Loading ? <Skeleton variant=\"txt\" height={50} width={250}/>:\r\n            <h1>MS Dhoni</h1>}\r\n            \r\n          </Grid>\r\n          <Grid container item xs={12} justify=\"center\">\r\n            {Loading ? <Skeleton variant=\"rec\" width={250} height={250}/>:\r\n            <img src=\"/images/dhoni.jpg\"  style={{marginBottom:50}} />}\r\n            \r\n          </Grid>\r\n          <Grid container item  xs={12} justify=\"center\" spacing={2}>\r\n            {arr.map((ele) => {\r\n                return (<Grid item xs={5}>\r\n                  {Loading?<Skeleton />:<Typography variant=\"subtitle1\">(2013-2020)</Typography> }\r\n                  { Loading?<Skeleton variant=\"text\" height={200}/>:\r\n                  <Typography varient=\"body1\"color=\"textPrimary\">\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        Mahendra Singh Dhoni (About this soundpronunciation (help·info) born 7 July 1981), is a former Indian international cricketer who captained the Indian national team in \r\n                        limited-overs formats from 2007 to 2016 and in Test \r\n                        cricket from 2008 to 2014. Under his captaincy, India won the 2007 ICC World Twenty20, the 2010 and 2016 Asia Cups, the 2011 ICC Cricket World Cup and the 2013 ICC Champions Trophy\r\n                  </Typography>\r\n                  }\r\n                </Grid>\r\n                    \r\n                  )\r\n              })\r\n            }\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <Footer/>\r\n    </div>\r\n    );\r\n  }\r\n  export async function getServerSideProps() {\r\n    // Fetch data from external API\r\n    console.log(\"Hii\");\r\n    const res = fetch(\"https://github.com/typicode/demo/blob/master/db.json\").then(response => {\r\n      if (response.ok) {\r\n        console.log(response);\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          var errmess = new Error(error.message);\r\n          throw errmess;\r\n    })\r\n  .then(response => console.log(response.json()))\r\n  .catch(error => console.log(error.message));\r\n    \r\n    \r\n    \r\n    console.log(res);\r\n    const data = await res.json()\r\n  \r\n    // Pass data to the page via props\r\n    return { props: { data } }\r\n  }\r\n  export default HomePage;"]},"metadata":{},"sourceType":"module"}